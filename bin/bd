#!/usr/bin/env bash

# % bd(1) LICENSE: MIT | Dotfile Utilities
# % Lars Kappert <http://github.com/webpro/dotfiles>
# modified by Mike Henderson <https://github.com/mvhenderson/dotfiles>
# % <date>
#
# NAME
# ====
#
# __bd__ - Go back to a specified directory up in the hierarchy
#
# USAGE
# =====
#
# __bd__ PATTERN
#
# DESCRIPTION
# ===========
#
# If you are in this path /home/user/project/src/org/main/site/utils/whatever
# and you want to go to site directory quickly, then just type:
#      . bd site
#
# If there are more than one directories with same name up in the hierarchy,
# bd will take you to the closest. (Not considering the immediate parent.)
#
# If you don't want to type the full directory name, then just give the starting
# few characters
#      . bd si
#
# Extra settings
# --------------
# To get the most out of it, put this line:
#      alias bd='. bd'
# in your ~/.bashrc file so that it is no longer necessary to put a dot and space.
#
# You can simply type 'bd <starting few letters>' to go back quickly.
#
# So in the case of the given example, it would be
#      'bd s' or 'bd si'
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

show-help "$1" "$BASH_SOURCE" true && return

OLDPWD=`pwd`

NEWPWD=`echo $OLDPWD | sed 's|\(.*/'$1'[^/]*/\).*|\1|'`
index=`echo $NEWPWD | awk '{ print index($1,"/'$1'"); }'`

if [ $index -eq 0 ]; then
    echo "No such occurrence."
fi

echo $NEWPWD
cd "$NEWPWD"
