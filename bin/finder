#!/usr/bin/env bash

# % finder(1) LICENSE: MIT | Dotfile Utilities
# % Jan Moesen <https://github.com/janmoesen/tilde>
#
# NAME
# ====
#
# __finder__ - Show the given file(s) in the Finder.
#
# USAGE
# =====
#
# __finder__ FILES...
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

show-help "$1" "$BASH_SOURCE" true && exit

# Default to the current directory.
[ $# -eq 0 ] && set -- .;

# Build the array of paths for AppleScript.
paths=();

for path; do
    # Make sure each path exists.
    if ! [ -e "$path" ]; then
        echo "$path: No such file or directory";
        continue;
    fi;

    # Crappily re-implement "readlink -f" ("realpath") for Darwin.
    # (The "cd ... > /dev/null" hides CDPATH noise.)
    [ -d "$path" ] \
        && path="$(cd "$path" > /dev/null && pwd)" \
        || path="$(cd "$(dirname "$path")" > /dev/null && \
                   echo "$PWD/$(basename "$path")")";

    # Use the "POSIX file" AppleScript syntax.
    paths+=("POSIX file \"${path//\"/\"}\"");
done;
[ "${#paths[@]}" -eq 0 ] && exit;

# Group all output to pipe through osacript.
{
    echo 'tell application "Finder"';
    echo -n 'select {'; # "reveal" would select only the last file.

    for ((i = 0; i < ${#paths[@]}; i++)); do
        echo -n "${paths[$i]}";
        [ $i -lt $(($# - 1)) ] && echo -n ', '; # Ugly array.join()...
    done;

    echo '}';
    echo 'activate';
    echo 'end tell';
} | osascript;
