#!/usr/bin/env bash

# % ipsum(1) LICENSE: MIT | Dotfile Utilities
# % Wynn Netherland <https://github.com/pengwynn/dotfiles>
# % April 09, 2013
#
# NAME
# ====
#
# __ipsum__ - Grab some placeholder copy from http://loripsum.net/
#
# USAGE
# =====
#
# __ipsum__ [options...]
#
# OPTIONS
# =======
#
# __--headings__ Add headings
#
# __--short__ Use short paragraph length
#
# __--medium__ Use medium paragraph length
#
# __--long__ Use long paragraph length
#
# __--verylong__ Use verylong paragraph length
#
# __--decorate__ Add bold, italic and marked text
#
# __--links__ Add links
#
# __--ol__ Add ordered lists
#
# __--ul__ Add unordered lists
#
# __--dl__ Add description lists
#
# __--bq__ Add blockquotes
#
# __--code__ Add code blocks
#
# __--caps__ Use ALL CAPS
#
# __--prude__ Use prude version
#
# __--[no-]plain__ Return plain text
#
# __--[no-]html__ Return html
#
#
# EXAMPLE
# =======
#
# ipsum --headings --long --plain
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
show-help "$1" "$BASH_SOURCE" && exit

#!/bin/bash

URL="http://loripsum.net/api"

# Option defaults
PLAIN=0
DEBUG=0
HEADINGS=0
DECORATE=0
LINKS=0
OL=0
UL=0
DL=0
BLOCKQUOTE=0
CODE=0
ALLCAPS=0
PRUDE=0


# Gets the command name without path
cmd(){ echo `basename $0`; }

# Error message
error(){
    echo "`cmd`: invalid option -- '$1'";
    echo "Try '`cmd` -h' for more information.";
    exit 1;
}

# getopt string
opts="hd:"

for pass in 1 2; do
    while [ -n "$1" ]; do
        case $1 in
            --) shift; break;;
            -*) case $1 in
                -d|--debug)            DEBUG=1;;
                --headings)            HEADINGS=1;;
                --short)               LENGTH="short";;
                --medium)              LENGTH="medium";;
                --long)                LENGTH="long";;
                --verylong)            LENGTH="verylong";;
                --decorate)            DECORATE=1;;
                --links)               LINKS=1;;
                --ol)                  OL=1;;
                --ul)                  UL=1;;
                --dl)                  DL=1;;
                --bq|--blockquote)     BLOCKQUOTE=1;;
                --code)                CODE=1;;
                --caps)                ALLCAPS=1;;
                --prude)               PRUDE=1;;
                --plain|--no-html)     PLAIN=1;;
                --no-plain|--html)     PLAIN=0;;
                --*)                 error $1;;
                -*)                  if [ $pass -eq 1 ]; then ARGS="$ARGS $1";
                                     else error $1; fi;;
                esac;;
            *)  if [ $pass -eq 1 ]; then ARGS="$ARGS $1";
                else error $1; fi;;
        esac
        shift
    done
    if [ $pass -eq 1 ]; then ARGS=`getopt $opts $ARGS`
        if [ $? != 0 ]; then usage; exit 2; fi; set -- $ARGS
    fi
done

if [[ $PLAIN -eq 1 ]]; then
  URL+="/plaintext"
fi

if [[ $HEADINGS -eq 1 ]]; then
  URL+="/headers"
fi

if [[ ! -z $LENGTH ]]; then
  URL+="/$LENGTH"
fi

if [[ $DECORATE -eq 1 ]]; then
  URL+="/decorate"
fi

if [[ $LINKS -eq 1 ]]; then
  URL+="/links"
fi

if [[ $OL -eq 1 ]]; then
  URL+="/ol"
fi

if [[ $UL -eq 1 ]]; then
  URL+="/ul"
fi

if [[ $DL -eq 1 ]]; then
  URL+="/dl"
fi

if [[ $BLOCKQUOTE -eq 1 ]]; then
  URL+="/bq"
fi

if [[ $CODE -eq 1 ]]; then
  URL+="/code"
fi

if [[ $CAPS -eq 1 ]]; then
  URL+="/allcaps"
fi

if [[ $PRUDE -eq 1 ]]; then
  URL+="/prude"
fi


if [[ $DEBUG -eq 1 ]]; then
  echo "URL:"
  echo $URL
  echo
fi

curl -s $URL
echo
