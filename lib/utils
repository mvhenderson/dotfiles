#!/usr/bin/env bash

check_package_manager() {
    case $os in
        osx*) check_brew ;;
        *) ;; #todo
    esac
}

check_build_tools() {
    if type_exists 'gcc'; then
        log_success "Build tools found"
    else
        case $os in
            osx*) log_fatal "The XCode Command Line Tools must be installed." ;;
            *) ;; #todo
        esac
    fi
}

run_packages() {
    case $os in
        osx*) run_brew ;;
        *) ;; #todo
    esac
}

# Comare version numbers, returns "<", ">" or "="
# credit: gh:alrra/dotfiles
compare_versions() {

    declare -a v1=(${1//./ })
    declare -a v2=(${2//./ })
    local i=""

    # Fill empty positions in v1 with zeros
    for (( i=${#v1[@]}; i<${#v2[@]}; i++ )); do
        v1[i]=0
    done

    for (( i=0; i<${#v1[@]}; i++ )); do
        # Fill empty positions in v2 with zeros
        if [[ -z ${v2[i]} ]]; then
            v2[i]=0
        fi

        if (( 10#${v1[i]} > 10#${v2[i]} )); then
            printf ">"
            return 0;
        fi

        if (( 10#${v1[i]} < 10#${v2[i]} )); then
            printf "<"
            return 0;
        fi
    done

    printf "="
}

