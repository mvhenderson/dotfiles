#!/usr/bin/env bash
[ -n "$PS1" ] || return

export DOTFILES_DIR="${HOME}/.dotfiles"
source "${DOTFILES_DIR}/lib/colors"

##############################################################################
# Path
##############################################################################

# http://stackoverflow.com/questions/370047/what-is-the-most-elegant-way-to-remove-a-path-from-the-path-variable-in-bash
path_append ()  { path_remove $1; [[ -d "$1" ]] && export PATH="$PATH:$1"; }
path_prepend () { path_remove $1; [[ -d "$1" ]] && export PATH="$1:$PATH"; }
path_remove ()  { export PATH=`echo -n $PATH | awk -v RS=: -v ORS=: '$0 != "'$1'"' | sed 's/:$//'`; }

path_prepend "/usr/local/bin"
path_prepend "/usr/local/sbin"
# path_prepend "$(brew --prefix coreutils)/libexec/gnubin" # Override OS X utils

path_append "${DOTFILES_DIR}/bin"
path_append "/usr/texbin"

unset path_append path_prepend path_remove




##############################################################################
# Environment options
##############################################################################

# Make vim the default editor
export EDITOR="vim"

# Prefer US English and use UTF-8
export LANG="en_US"
export LC_ALL="en_US.UTF-8"

# Colorize manual pages
# - http://unix.stackexchange.com/questions/119/colors-in-man-pages
# - http://www.gnu.org/software/termutils/manual/termutils-2.0/html_chapter/tput_1.html
export LESS_TERMCAP_md=$cyan                  # headers and other bold item
export LESS_TERMCAP_me=$reset
export LESS_TERMCAP_us="$(tput smul)$yellow"  # underline
export LESS_TERMCAP_ue="$(tput rmul)$reset"
export LESS_TERMCAP_so="$base2$base01"        # hightlight
export LESS_TERMCAP_se="$(tput rmso)$reset"

# Don’t clear the screen after quitting a manual page
export MANPAGER="less -X"

# Default less options (override using -+, ie: less -+F)
export LESS=-XRFi
       #     │││└─ insensitive search (unless pattern has caps)
       #     ││└─ auto exit when file fits on one screen
       #     │└─ enable color
       #     └─ don't clear screen

# Always enable colored `grep` output
export GREP_OPTIONS="--color=auto"

# Link Homebrew casks in `/Applications` rather than `~/Applications`
export HOMEBREW_CASK_OPTS="--appdir=/Applications";

[[ -x /usr/libexec/java_home ]] && export JAVA_HOME="$(/usr/libexec/java_home)"

# Case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob

# Autocorrect typos in path names when using `cd`
shopt -s cdspell

# Bash 4 recursive cd, e.g. `**/qux` will enter `./foo/bar/baz/qux`
shopt -s autocd 2> /dev/null;

# Bash 4 recursive globbing, e.g. `echo **/*.txt`
shopt -s globstar 2> /dev/null;

# Bash 4 autocorrect fudged paths during completion
shopt -s dirspell 2> /dev/null;

# Check the window size after each command and, if necessary, update the values
# of LINES and COLUMNS.
shopt -s checkwinsize

# Save all lines of a multiple-line command in the same history entry
shopt -s cmdhist

# Do not autocomplete on an empty line
shopt -s no_empty_cmd_completion;

# Raise limit for open files and processes
ulimit -S -n 1024




##############################################################################
# History
##############################################################################

# Larger bash history (allow 32³ entries; default is 500)
export HISTSIZE=32768
export HISTFILESIZE=$HISTSIZE
export HISTCONTROL="ignorespace:erasedups"

# Make some commands not show up in history
# TODO: man, cd .., ll, la, lsd, which *
export HISTIGNORE="ls:ll:la:lla:cd:cd -:pwd:exit:date:* --help:&:[fb]g"

# Append to the Bash history file, rather than overwriting it
shopt -s histappend

# Remove short dir from Terminal.app title and write every command to history
PROMPT_COMMAND=${PROMPT_COMMAND//update_terminal_cwd;/}
PROMPT_COMMAND=${PROMPT_COMMAND//history -a;/}
export PROMPT_COMMAND="history -a; $PROMPT_COMMAND"




##############################################################################
# Aliases
##############################################################################

# Allow aliases to be used with sudo
alias sudo="sudo "

# cd
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias -- -="cd -"
alias bd=". bd"

# Shortcuts
alias g="git"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
    alias ls="command ls --color"
else # OS X `ls`
    alias ls="command ls -G"
fi

# ls color map for OS X and GNU ls
function set_ls_colors() {

    # man ls | grep "LSCOLORS" -- OS X
    local -a osx=(
        'ex'  # blue - directory
        'gx'  # cyan - symbolic link
        'fx'  # magenta - socket
        'fx'  # magenta - pipe
        'cx'  # green - executable
        'fx'  # magenta - block special
        'fx'  # magenta - character special
        'cx'  # green - executable with setuid bit set
        'cx'  # green - executable with setgid bit set
        'ex'  # blue - directory writable to others, with sticky bit
        'ex'  # blue - directory writable to others, without sticky bit
    )
    local a="${osx[*]}"
    export LSCOLORS="${a// /}"

    # http://www.bigsoft.co.uk/blog/index.php/2008/04/11/configuring-ls_colors
    local -a gnu=(
        'no=00'         # default
        'fi=00'         # file

        # directory - blue
        'di=01;34'

        # executable - green
        'ex=01;32'

        # link - cyan (similar to green since links are usually to exe)
        'ln=01;36'

        # system files - magenta
        'pi=35'         # fifo
        'so=35'         # socket
        'do=35'         # door
        'bd=35'         # block file
        'cd=35'         # character file

        # bad links - red
        'or=31'         # orphan link
        'mi=31'         # missing file

        # binary files - violet
        '*.pdf=95'   # docs
        '*.doc=95'
        '*.docx=95'

        '*.tar=95'   # Zips
        '*.tgz=95'
        '*.arj=95'
        '*.taz=95'
        '*.lzh=95'
        '*.zip=95'
        '*.z=95'
        '*.Z=95'
        '*.gz=95'
        '*.bz2=95'
        '*.deb=95'
        '*.rpm=95'
        '*.jar=95'

        '*.jpg=95'   # Images
        '*.jpeg=95'
        '*.gif=95'
        '*.bmp=95'
        '*.pbm=95'
        '*.pgm=95'
        '*.ppm=95'
        '*.tga=95'
        '*.xbm=95'
        '*.xpm=95'
        '*.tif=95'
        '*.tiff=95'
        '*.png=95'
        '*.mov=95'
        '*.mpg=95'
        '*.mpeg=95'
        '*.avi=95'
        '*.fli=95'
        '*.gl=95'
        '*.dl=95'
        '*.xcf=95'
        '*.xwd=95'
        '*.ogg=95'
        '*.mp3=95'
        '*.wav=95'
    )
    local b="${gnu[*]}"
    export LS_COLORS="${b// /:}"
}
set_ls_colors
unset set_ls_colors

alias la="ls -AF"     # all
alias ll="ls -lF"     # long
alias lla="ls -lAF"   # all, long
alias lsd="ls -d */"  # dir only
alias l="ls -ogF"     # long, no user, no group
alias lt="ls -toF"    # by last modified, long, no user, no group
alias lz="ls -lrSog"  # by size, lon, no user, no group
alias dir="tree --dirsfirst -ChFpDaL 1"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec $SHELL -l"

# Concatenate and print content of files (add line numbers)
alias catn="cat -n"

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias ipl="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Copy public key to the pasteboard
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | printf '=> Public key copied to pasteboard.\n'"

# Request using GET, POST, etc. method
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
    alias "$method"="lwp-request -m '$method'"
done

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# Speed Test
alias speedtest="wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip"

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd="hexdump -C"

# OS X has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# OS X has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# compute SHA-2 digests
alias sha256="openssl dgst -sha256 <"
alias sha512="openssl dgst -sha512 <"

# JavaScriptCore REPL
# jscbin="/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc";
# [ -e "${jscbin}" ] && alias jsc="${jscbin}";
# unset jscbin;

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Merge PDF files
# Usage: `mergepdf -o output.pdf input{1,2,3}.pdf`
alias mergepdf='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'

# Toggle Spotlight
alias spotoff="sudo mdutil -a -i off"
alias spoton="sudo mdutil -a -i on"

# PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
alias plistbuddy="/usr/libexec/PlistBuddy"

# Ring the terminal bell, and put a badge on Terminal.app’s Dock icon
# (useful when executing time-consuming commands)
alias bell="tput bel"

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# Aliasing eachdir like this allows you to use aliases/functions as commands.
alias eachdir=". eachdir"

# Restart Apache on OS X
alias ra="sudo apachectl restart"

# Clipboard aliases Cygwin, Linux and OS X.
if command -v pbpaste >/dev/null; then
    alias getclip='pbpaste';
    alias putclip='pbcopy';
elif command -v xclip >/dev/null; then
    alias getclip='xclip --out';
    alias putclip='xclip --in';
fi;

# Disk use
alias du1="duh -d 1"
alias du2="duh -d 2"
alias duf="duh -d 1 . * .[^\.]*"

# Undo a `git push` - credit:@paulirish
alias undopush="git push -f origin HEAD^:master"

# PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
alias plistbuddy="/usr/libexec/PlistBuddy"

# Copy w/ progress - credit:paulirish
alias cwp="rsync -WavP --human-readable --progress"


##############################################################################
# Functions
##############################################################################

# Create a new directory and enter it
mkd() { mkdir -p "$@" && cd "$@"; }

# Fuzzy find file/dir - credit:@webpro
ff()  { find . -type f -name "${1}";  }
fff() { find . -type f -name "*${1}*";}
fd()  { find . -type d -name "${1}";  }
fdf() { find . -type d -name "*${1}*";}

# Change working directory to the top-most Finder window location - credit:@mathiasbynens
function cdf() { # short for `cdfinder`
    cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')";
}

# Use Git’s colored unified diff when available
hash git &>/dev/null;
if [ $? -eq 0 ]; then
    function diff() {
        git diff --no-index --color-words "$@";
    }
fi;




##############################################################################
# Completion
##############################################################################

# Add tab completion for many Bash commands
if which brew > /dev/null && [ -f "$(brew --prefix)/etc/bash_completion" ]; then
    source "$(brew --prefix)/etc/bash_completion";
elif [ -f /etc/bash_completion ]; then
    source /etc/bash_completion;
fi;

# Enable tab completion for `g` by marking it as an alias for `git`
if type _git &> /dev/null && [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
    complete -o default -o nospace -F _git g;
fi;

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2)" scp sftp ssh

# Grunt
type -P grunt &>/dev/null && eval "$(grunt --completion=bash)"

# Add `killall` tab completion for common apps
complete -o "nospace" -W "Contacts Calendar Dock Finder Mail Safari iTunes SystemUIServer Terminal Twitter" killall;

# init z   https://github.com/rupa/z
source "${DOTFILES_DIR}/conf/z/z.sh"


##############################################################################
# Prompt
##############################################################################

# import git prompt if not already sourced by bash completiong above
if [ -z $(type -t __git_ps1) ]; then
    if which brew > /dev/null && [ -f "$(brew --prefix)/etc/bash_completion.d/git-prompt.sh" ]; then
        source $(brew --prefix)/etc/bash_completion.d/git-prompt.sh
    elif [ -f /usr/lib/git-core/git-sh-prompt ]; then
        source /usr/lib/git-core/git-sh-prompt
    fi
fi

GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWSTASHSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_SHOWUPSTREAM="auto"
GIT_PS1_STATESEPARATOR=" $magenta"

# Tweak standard __git_ps1 output:
# - ensure space before upstream markers and color them
# - remove = upstream marker
# - replace markers
git_info() {
    __git_ps1 "%s" \
    | sed -e "s/\([<>]*\)$/ $yellow\1/" \
    | tr -d "=" \
    | tr "*%<>" "!?⇣⇡"
}

PS1="\n"                                    # Ensure blank line before prompt
if [[ -n "$SSH_TTY" ]]; then
    PS1+="\[\033]2;\h:\w\007\]"             # window = host:full path
    PS1+="\[\033]1;\h:\W\007\]"             # tab = host:short path
    PS1+="\[$orange\]\h "                   # only show host if connected via ssh
else
    PS1+="\[\033]2;\w\007\]"                # window = full path
    PS1+="\[\033]1;\W\007\]"                # tab title to short working directory
fi
PS1+="\[$blue\]\w "                         # working directory
PS1+="\[$green\]\$(git_info)"               # git branch / status
PS1+="\n"                                   # second line
[[ $EUID == 0 ]] && PS1+="\[$red\]\u "      # only show user if root
PS1+="\[$reset\]\\$ "                       # "smart" prompt char ($ or #)
export PS1
export PS2="\[${yellow}\]→ \[${reset}\]";




##############################################################################
# Local configuration and overrides
##############################################################################

[[ -e "${DOTFILES_DIR}/private/bash_profile" ]] && source "${DOTFILES_DIR}/private/bash_profile"
